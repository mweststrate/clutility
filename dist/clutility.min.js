/*! clutility - v0.0.2 - The minimalistic class and inheritance utility for javascript
(c) Michel Weststrate - MIT licensed. 
https://github.com/mweststrate/clutility */
!function(){function a(a,g){if(!a)throw new Error("Super class not defined");g=1==arguments.length?a:g,a=arguments.length>1?a:Object,e(g)&&(g=g(a.prototype));var h=g.initialize;if(h){if("$super"===b(h)[0]){var i=h;h=function(){i.apply(this,[c(a,this)].concat(f.call(arguments)))}}}else h=function(){a.apply(this,arguments)};var j=function(){this.constructor=h};j.prototype=a.prototype;var k=h.prototype=new j;return d(g,function(d,h){if("initialize"!==h&&g.hasOwnProperty(h))if(e(d)&&"$super"===b(d)[0]){var i=a.prototype[h];if(!i||!e(i))throw new Error("No super method found for '"+h+"'");k[h]=function(){return d.apply(this,[c(i,this)].concat(f.call(arguments)))}}else k[h]=d}),h}function b(a){return a.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/)|(\s))/gm,"").match(/^function\s*[^\(]*\(\s*([^\)]*)\)/m)[1].split(/,/)}function c(a,b){return a.bind?a.bind(b):function(){return a.apply(b,arguments)}}function d(a,b){for(var c in a)b(a[c],c)}function e(a){return"function"==typeof a||!1}var f=Array.prototype.slice;"undefined"!=typeof exports?module.exports=a:"undefined"==typeof window||window.clutility||(window.clutility=a)}();