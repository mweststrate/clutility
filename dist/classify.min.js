/*! classify - v0.0.1 - The minimalistic class and inheritance utility for javascript
(c) Michel Weststrate - MIT licensed.
https://github.com/mweststrate/classify */
!function(){function a(a,h){if(!a)throw new Error("Super class not defined");h=1==arguments.length?a:h,a=arguments.length>1?a:Object,e(h)&&(h=h(a.prototype));var i=h.initialize||f;if("$super"===b(i)[0]){var j=i;i=function(){j.apply(this,[c(a,this)].concat(g.call(arguments)))}}var k=i.prototype=new a;for(var l in k)k.hasOwnProperty(l)&&delete k[l];k.constructor=i;var m=a.prototype;return d(h,function(a,d){if("initialize"!==d&&h.hasOwnProperty(d))if(e(a)&&"$super"===b(a)[0]){var f=m[d];if(!f||!e(f))throw new Error("No super method found for '"+d+"'");k[d]=function(){return a.apply(this,[c(f,this)].concat(g.call(arguments)))}}else k[d]=a}),i}function b(a){return a.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/)|(\s))/gm,"").match(/^function\s*[^\(]*\(\s*([^\)]*)\)/m)[1].split(/,/)}function c(a,b){return a.bind?a.bind(b):function(){return a.apply(b,arguments)}}function d(a,b){for(var c in a)b(a[c],c)}function e(a){return"function"==typeof a||!1}function f(){}var g=Array.prototype.slice;"undefined"!=typeof exports?module.exports=a:"undefined"==typeof window||window.classify||(window.classify=a)}();